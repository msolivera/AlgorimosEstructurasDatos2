package Parcial1.Tabla;

import java.util.Collection;
import java.util.LinkedList;
import javax.swing.DefaultListModel;

public class TriePrefixAEDIIGUI extends javax.swing.JFrame {
    
    private TArbolTrie trie;
    
    /**
     * Creates new form TriePrefixAEDIIGUI
     */
    public TriePrefixAEDIIGUI() {
        this.trie = new TArbolTrie();

       // CARGAR EN EL TRIE LOS DISPOSITIVOS PARTIR DEL ARCHIVO DISPOSITIVOS.TXT
        String[] lineas = ManejadorArchivosGenerico.leerArchivo("./src/parcial1/tabla/dispositivos.txt");
        for(String l:lineas){
            String ip = l.split(",")[0];
            String dev = l.split(",")[1];
            
            ip=ip.trim();
            dev=dev.trim();
            if (ip!=null && dev != null){
                TDispositivo d = new TDispositivo(ip,dev);
                //System.out.println("ANTES: "+d.getDirIP()+" - "+d.getNombre());
                //System.out.println("ANTES: "+(d.getDirIP().charAt(0)-'0')+" - "+(d.getDirIP().charAt(1)-'0')+" - "+(d.getDirIP().charAt(2)-'0'));
                this.trie.insertar(d);
                //System.out.println("INSERTADO: "+ip+" - "+dev);
            }
        } 
        initComponents();
        
        DefaultListModel listModel = new DefaultListModel();
        LinkedList<TDispositivo> listaDispositivos;
        String subred = "";
        listaDispositivos = (LinkedList<TDispositivo>) this.trie.buscarDispositivos(subred);
        for(TDispositivo d : listaDispositivos){
            listModel.addElement(d.getNombre()+","+d.getDirIP());
        }
        jListPalabras.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListPalabras = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrese el prefijo buscado");

        jtfSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSearchActionPerformed(evt);
            }
        });
        jtfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchKeyReleased(evt);
            }
        });

        jLabel2.setText("Lista de palabras");

        jScrollPane1.setViewportView(jListPalabras);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jtfSearch, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchKeyReleased
        DefaultListModel listModel = new DefaultListModel();
        jListPalabras.clearSelection();
        LinkedList<TDispositivo> listaDispositivos;
        String subred = jtfSearch.getText();
        listaDispositivos = (LinkedList<TDispositivo>) this.trie.buscarDispositivos(subred);
        if (listaDispositivos!=null){
            for(TDispositivo d : listaDispositivos){
                listModel.addElement(d.getNombre()+","+d.getDirIP());
            }
            jListPalabras.setModel(listModel);
        }else{
            listModel.addElement("NO SE ENCONTRARON IPs REGISTRADAS EN ESA SUBRED,\n O SUBRED INV√ÅLIDA.\n FAVOR CORREGIR.");
            jListPalabras.setModel(listModel);
        }
    }//GEN-LAST:event_jtfSearchKeyReleased

    private void jtfSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TriePrefixAEDIIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TriePrefixAEDIIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TriePrefixAEDIIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TriePrefixAEDIIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TriePrefixAEDIIGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListPalabras;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfSearch;
    // End of variables declaration//GEN-END:variables
}
